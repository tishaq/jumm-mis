{"ast":null,"code":"var _jsxFileName = \"/home/ahmedt/ajisaq/jumm-mis/pages/listFacility.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\nimport Link from \"next/link\";\n\nconst listFacility = props => __jsx(React.Fragment, null, __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, props.facilityType), __jsx(\"div\", {\n  class: \"header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"Unpaid Facility Charges for \", props.facilityType, \"s This Month\"), __jsx(\"div\", {\n  class: \"main\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(\"div\", {\n  class: \"card-list\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(\"div\", {\n  class: \"card-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, props.facilityType, \"s\"), __jsx(\"div\", {\n  class: \"card-body\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, __jsx(\"table\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, __jsx(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"S/N\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"Facility ID\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Owner Name\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Owner Contact\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"Due Date\")), __jsx(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, props.data.map((f, index) => __jsx(Link, {\n  href: {\n    pathname: \"/facilityDetail\"\n  },\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, __jsx(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, index + 1)), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, f.facilityId), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, f.currentOwner), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, f.currentOwnerContact), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, f.createdAt))))))))));\n\nlistFacility.getInitialProps = async function ({\n  query\n}) {\n  let nextToken = null;\n  let results = [];\n  let errors;\n  let raw = {};\n\n  try {\n    do {\n      raw = await API.graphql(graphqlOperation(queries.listFacilitys, {\n        filter: {\n          facilityType: {\n            eq: query.facilityType\n          }\n        },\n        limit: 10000,\n        nextToken: nextToken\n      }));\n      nextToken = raw.data.listFacilitys.nextToken;\n      raw.data.listFacilitys.items.map(value => results.push(value));\n    } while (nextToken);\n  } catch (error) {\n    errors = error;\n  }\n\n  return {\n    data: results,\n    facilityType: query.facilityType,\n    errors: errors\n  };\n};\n\nexport default listFacility;","map":{"version":3,"sources":["/home/ahmedt/ajisaq/jumm-mis/pages/listFacility.js"],"names":["React","Component","API","graphqlOperation","queries","Link","listFacility","props","facilityType","data","map","f","index","pathname","facilityId","currentOwner","currentOwnerContact","createdAt","getInitialProps","query","nextToken","results","errors","raw","graphql","listFacilitys","filter","eq","limit","items","value","push","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\nimport Link from \"next/link\";\nconst listFacility = props => (\n  <>\n    <p>{props.facilityType}</p>\n    <div class=\"header\">\n      Unpaid Facility Charges for {props.facilityType}s This Month\n    </div>\n    <div class=\"main\">\n      <div class=\"card-list\">\n        <div class=\"card-title\">{props.facilityType}s</div>\n        <div class=\"card-body\">\n          <table>\n            <thead>\n              <th>S/N</th>\n              <th>Facility ID</th>\n              <th>Owner Name</th>\n              <th>Owner Contact</th>\n              <th>Due Date</th>\n            </thead>\n            <tbody>\n              {props.data.map((f, index) => (\n                <Link\n                  href={{\n                    pathname: \"/facilityDetail\"\n                  }}\n                  key={index}\n                >\n                  <tr>\n                    <td>\n                      <a>{index + 1}</a>\n                    </td>\n                    <td>{f.facilityId}</td>\n                    <td>{f.currentOwner}</td>\n                    <td>{f.currentOwnerContact}</td>\n                    <td>{f.createdAt}</td>\n                  </tr>\n                </Link>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </>\n);\nlistFacility.getInitialProps = async function({ query }) {\n  let nextToken = null;\n  let results = [];\n  let errors;\n  let raw = {};\n  try {\n    do {\n      raw = await API.graphql(\n        graphqlOperation(queries.listFacilitys, {\n          filter: { facilityType: { eq: query.facilityType } },\n          limit: 10000,\n          nextToken: nextToken\n        })\n      );\n      nextToken = raw.data.listFacilitys.nextToken;\n      raw.data.listFacilitys.items.map(value => results.push(value));\n    } while (nextToken);\n  } catch (error) {\n    errors = error;\n  }\n  return { data: results, facilityType: query.facilityType, errors: errors };\n};\nexport default listFacility;\n"]},"metadata":{},"sourceType":"module"}