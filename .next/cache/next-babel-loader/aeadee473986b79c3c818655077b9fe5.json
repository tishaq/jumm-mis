{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nvar _jsxFileName = \"/home/ahmedt/ajisaq/jumm-mis/pages/facility.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Link from \"next/link\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\n\nvar facility = function facility(props) {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"search-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/addFacility\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    name: \"new-facility\",\n    type: \"button\",\n    value: \"New Facility\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Search for Facility: \\xA0\", __jsx(\"input\", {\n    name: \"search-term\",\n    type: \"text\",\n    placeholder: \"Facility ID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), \"\\xA0\", __jsx(\"input\", {\n    name: \"search\",\n    type: \"button\",\n    value: \"Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }))))), __jsx(\"div\", {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, console.log(_Object$entries(props.data)), _Object$entries(props.data).map(function (items) {\n    return __jsx(\"div\", {\n      className: \"card\",\n      key: items[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, items[0]), __jsx(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"facility-summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Unpaid (0) \")), __jsx(Link, {\n      as: \"/listFacility\",\n      href: {\n        pathname: \"/listFacility\",\n        query: items[1][0].map(function (o) {\n          return o;\n        })\n      },\n      prefetch: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \" Total (\", items[1].length, \") \")))));\n  })));\n};\n\nfacility.getInitialProps = function _callee() {\n  var nextToken, results, errors, raw, facilities;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          nextToken = null;\n          results = [];\n          raw = {};\n          facilities = {};\n          _context.prev = 4;\n\n        case 5:\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(queries.listFacilitys, {\n            limit: 10000,\n            nextToken: nextToken\n          })));\n\n        case 7:\n          raw = _context.sent;\n          nextToken = raw.data.listFacilitys.nextToken;\n          raw.data.listFacilitys.items.map(function (value) {\n            return results.push(value);\n          });\n\n        case 10:\n          if (nextToken) {\n            _context.next = 5;\n            break;\n          }\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](4);\n          errors = _context.t0;\n\n        case 16:\n          results.map(function (f) {\n            if (!facilities[f.facilityType]) {\n              facilities[f.facilityType] = [];\n              facilities[f.facilityType].push(f);\n            } else {\n              facilities[f.facilityType].push(f);\n            }\n          });\n          return _context.abrupt(\"return\", {\n            data: facilities,\n            errors: errors\n          });\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[4, 13]]);\n};\n\nexport default facility;","map":{"version":3,"sources":["/home/ahmedt/ajisaq/jumm-mis/pages/facility.js"],"names":["React","Component","Link","API","graphqlOperation","queries","facility","props","console","log","data","map","items","pathname","query","o","length","getInitialProps","nextToken","results","raw","facilities","graphql","listFacilitys","limit","value","push","errors","f","facilityType"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SACpB,4BACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,cAAZ;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAyC,IAAA,KAAK,EAAC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEE;AAAO,IAAA,IAAI,EAAC,aAAZ;AAA0B,IAAA,IAAI,EAAC,MAA/B;AAAsC,IAAA,WAAW,EAAC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,UAIE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,QAA1B;AAAmC,IAAA,KAAK,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CANF,CADF,CADF,CADF,EAmBE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,CAACC,GAAR,CAAY,gBAAeF,KAAK,CAACG,IAArB,CAAZ,CADH,EAEG,gBAAeH,KAAK,CAACG,IAArB,EAA2BC,GAA3B,CAA+B,UAAAC,KAAK;AAAA,WACnC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEA,KAAK,CAAC,CAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BA,KAAK,CAAC,CAAD,CAAlC,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAKE,MAAC,IAAD;AACE,MAAA,EAAE,EAAC,eADL;AAEE,MAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE,eADN;AAGJC,QAAAA,KAAK,EAAEF,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,EAAYD,GAAZ,CAAgB,UAAAI,CAAC;AAAA,iBAAIA,CAAJ;AAAA,SAAjB;AAHH,OAFR;AAOE,MAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYH,KAAK,CAAC,CAAD,CAAL,CAASI,MAArB,OATF,CALF,CADF,CAFF,CADmC;AAAA,GAApC,CAFH,CAnBF,CADoB;AAAA,CAAtB;;AAiDAV,QAAQ,CAACW,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,UAAAA,SADqB,GACT,IADS;AAErBC,UAAAA,OAFqB,GAEX,EAFW;AAIrBC,UAAAA,GAJqB,GAIf,EAJe;AAKrBC,UAAAA,UALqB,GAKR,EALQ;AAAA;;AAAA;AAAA;AAAA,2CAQTlB,GAAG,CAACmB,OAAJ,CACVlB,gBAAgB,CAACC,OAAO,CAACkB,aAAT,EAAwB;AACtCC,YAAAA,KAAK,EAAE,KAD+B;AAEtCN,YAAAA,SAAS,EAAEA;AAF2B,WAAxB,CADN,CARS;;AAAA;AAQrBE,UAAAA,GARqB;AAcrBF,UAAAA,SAAS,GAAGE,GAAG,CAACV,IAAJ,CAASa,aAAT,CAAuBL,SAAnC;AACAE,UAAAA,GAAG,CAACV,IAAJ,CAASa,aAAT,CAAuBX,KAAvB,CAA6BD,GAA7B,CAAiC,UAAAc,KAAK;AAAA,mBAAIN,OAAO,CAACO,IAAR,CAAaD,KAAb,CAAJ;AAAA,WAAtC;;AAfqB;AAAA,cAgBdP,SAhBc;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBvBS,UAAAA,MAAM,cAAN;;AAlBuB;AAoBzBR,UAAAA,OAAO,CAACR,GAAR,CAAY,UAAAiB,CAAC,EAAI;AACf,gBAAI,CAACP,UAAU,CAACO,CAAC,CAACC,YAAH,CAAf,EAAiC;AAC/BR,cAAAA,UAAU,CAACO,CAAC,CAACC,YAAH,CAAV,GAA6B,EAA7B;AACAR,cAAAA,UAAU,CAACO,CAAC,CAACC,YAAH,CAAV,CAA2BH,IAA3B,CAAgCE,CAAhC;AACD,aAHD,MAGO;AACLP,cAAAA,UAAU,CAACO,CAAC,CAACC,YAAH,CAAV,CAA2BH,IAA3B,CAAgCE,CAAhC;AACD;AACF,WAPD;AApByB,2CA6BlB;AAAElB,YAAAA,IAAI,EAAEW,UAAR;AAAoBM,YAAAA,MAAM,EAAEA;AAA5B,WA7BkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AA+BA,eAAerB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Link from \"next/link\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\n\nconst facility = props => (\n  <>\n    <div className=\"header\">\n      <form>\n        <div className=\"search-items\">\n          <Link href=\"/addFacility\">\n            <a>\n              <input name=\"new-facility\" type=\"button\" value=\"New Facility\" />\n            </a>\n          </Link>\n          <div>\n            Search for Facility: &nbsp;\n            <input name=\"search-term\" type=\"text\" placeholder=\"Facility ID\" />\n            &nbsp;\n            <input name=\"search\" type=\"button\" value=\"Search\" />\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <div className=\"main\">\n      {console.log(Object.entries(props.data))}\n      {Object.entries(props.data).map(items => (\n        <div className=\"card\" key={items[0]}>\n          <div className=\"card-title\">{items[0]}</div>\n          <div className=\"card-body\">\n            <div className=\"facility-summary\">\n              <Link href=\"#\">\n                <a>Unpaid (0) </a>\n              </Link>\n\n              <Link\n                as=\"/listFacility\"\n                href={{\n                  pathname: \"/listFacility\",\n\n                  query: items[1][0].map(o => o)\n                }}\n                prefetch\n              >\n                <a> Total ({items[1].length}) </a>\n              </Link>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  </>\n);\nfacility.getInitialProps = async function() {\n  let nextToken = null;\n  let results = [];\n  let errors;\n  let raw = {};\n  let facilities = {};\n  try {\n    do {\n      raw = await API.graphql(\n        graphqlOperation(queries.listFacilitys, {\n          limit: 10000,\n          nextToken: nextToken\n        })\n      );\n      nextToken = raw.data.listFacilitys.nextToken;\n      raw.data.listFacilitys.items.map(value => results.push(value));\n    } while (nextToken);\n  } catch (error) {\n    errors = error;\n  }\n  results.map(f => {\n    if (!facilities[f.facilityType]) {\n      facilities[f.facilityType] = [];\n      facilities[f.facilityType].push(f);\n    } else {\n      facilities[f.facilityType].push(f);\n    }\n  });\n\n  return { data: facilities, errors: errors };\n};\nexport default facility;\n"]},"metadata":{},"sourceType":"module"}