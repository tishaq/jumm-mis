{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ahmedt/ajisaq/jumm-mis/pages/remit.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\n\nvar remit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(remit, _Component);\n\n  function remit() {\n    _classCallCheck(this, remit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(remit).apply(this, arguments));\n  }\n\n  _createClass(remit, [{\n    key: \"render\",\n    //static async getInitialProps() {}\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"search-items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Select the range of dates to view summary Maximum of 30 days\"), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"From:\", __jsx(\"input\", {\n        name: \"datepicker1\",\n        type: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), \"To:\", __jsx(\"input\", {\n        name: \"datepicker2\",\n        type: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), __jsx(\"input\", {\n        name: \"load\",\n        type: \"button\",\n        value: \"Load\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }))))), __jsx(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Transaction Summary\"), __jsx(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, __jsx(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, __jsx(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, __jsx(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"S/N\"), __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Revenue Source\"), __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Amount\"))), __jsx(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, _Object$entries(this.props.data).map(function (tck, index) {\n        return __jsx(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, index + 1), __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, tck[0]), __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"N\", tck[1].reduce(function (x, y) {\n          return x + y;\n        })));\n      })))))));\n    }\n  }]);\n\n  return remit;\n}(Component);\n\nremit.getInitialProps = function _callee() {\n  var nextToken, results, errors, raw, tickets;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          nextToken = null;\n          results = [];\n          raw = {};\n          tickets = {};\n          _context.prev = 4;\n\n        case 5:\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(queries.listTickets, {\n            limit: 10000,\n            nextToken: nextToken\n          })));\n\n        case 7:\n          raw = _context.sent;\n          nextToken = raw.data.listTickets.nextToken;\n          raw.data.listTickets.items.map(function (value) {\n            return results.push(value);\n          });\n\n        case 10:\n          if (nextToken) {\n            _context.next = 5;\n            break;\n          }\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](4);\n          errors = _context.t0;\n\n        case 16:\n          results.map(function (t) {\n            if (!tickets[t.deviceName]) {\n              tickets[t.deviceName] = [];\n            }\n\n            tickets[t.deviceName].push(_parseInt(t.fee));\n          });\n          return _context.abrupt(\"return\", {\n            data: tickets,\n            errors: errors\n          });\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[4, 13]]);\n};\n\nexport default remit;","map":{"version":3,"sources":["/home/ahmedt/ajisaq/jumm-mis/pages/remit.js"],"names":["React","Component","API","graphqlOperation","queries","remit","props","data","map","tck","index","reduce","x","y","getInitialProps","nextToken","results","raw","tickets","graphql","listTickets","limit","items","value","push","errors","t","deviceName","fee"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\nclass remit extends Component {\n  //static async getInitialProps() {}\n  render() {\n    return (\n      <>\n        <div className=\"header\">\n          <form>\n            <div className=\"search-items\">\n              <p>\n                Select the range of dates to view summary Maximum of 30 days\n              </p>\n\n              <div>\n                From:\n                <input name=\"datepicker1\" type=\"date\" />\n                To:\n                <input name=\"datepicker2\" type=\"date\" />\n                <input name=\"load\" type=\"button\" value=\"Load\" />\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"main\">\n          <div className=\"card-list\">\n            <div className=\"card-title\">Transaction Summary</div>\n            <div className=\"card-body\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>S/N</th>\n                    <th>Revenue Source</th>\n                    <th>Amount</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.entries(this.props.data).map((tck, index) => (\n                    <tr>\n                      <td>{index + 1}</td>\n                      <td>{tck[0]}</td>\n                      <td>N{tck[1].reduce((x, y) => x + y)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nremit.getInitialProps = async function() {\n  let nextToken = null;\n  let results = [];\n  let errors;\n  let raw = {};\n  let tickets = {};\n  try {\n    do {\n      raw = await API.graphql(\n        graphqlOperation(queries.listTickets, {\n          limit: 10000,\n          nextToken: nextToken\n        })\n      );\n      nextToken = raw.data.listTickets.nextToken;\n      raw.data.listTickets.items.map(value => results.push(value));\n    } while (nextToken);\n  } catch (error) {\n    errors = error;\n  }\n  results.map(t => {\n    if (!tickets[t.deviceName]) {\n      tickets[t.deviceName] = [];\n    }\n    tickets[t.deviceName].push(parseInt(t.fee));\n  });\n  return { data: tickets, errors: errors };\n};\n\nexport default remit;\n"]},"metadata":{},"sourceType":"module"}