{"ast":null,"code":"import _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nvar _jsxFileName = \"/home/ahmedt/ajisaq/jumm-mis/pages/facility.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Link from \"next/link\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\n\nconst facility = props => __jsx(React.Fragment, null, __jsx(\"div\", {\n  className: \"header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, __jsx(\"form\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"search-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/addFacility\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(\"input\", {\n  name: \"new-facility\",\n  type: \"button\",\n  value: \"New Facility\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}))), __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Search for Facility: \\xA0\", __jsx(\"input\", {\n  name: \"search-term\",\n  type: \"text\",\n  placeholder: \"Facility ID\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), \"\\xA0\", __jsx(\"input\", {\n  name: \"search\",\n  type: \"button\",\n  value: \"Search\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}))))), __jsx(\"div\", {\n  className: \"main\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, console.log(_Object$entries(props.data)), _Object$entries(props.data).map(items => __jsx(\"div\", {\n  className: \"card\",\n  key: items[0],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, items[0]), __jsx(\"div\", {\n  className: \"card-body\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"facility-summary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"#\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, \"Unpaid (0) \")), __jsx(Link, {\n  as: \"/listFacility\",\n  href: {\n    pathname: \"/listFacility\",\n    query: {\n      data: items.map(o => o)\n    }\n  },\n  prefetch: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, \" Total (\", items[1].length, \") \"))))))));\n\nfacility.getInitialProps = async function () {\n  let nextToken = null;\n  let results = [];\n  let errors;\n  let raw = {};\n  let facilities = {};\n\n  try {\n    do {\n      raw = await API.graphql(graphqlOperation(queries.listFacilitys, {\n        limit: 10000,\n        nextToken: nextToken\n      }));\n      nextToken = raw.data.listFacilitys.nextToken;\n      raw.data.listFacilitys.items.map(value => results.push(value));\n    } while (nextToken);\n  } catch (error) {\n    errors = error;\n  }\n\n  results.map(f => {\n    if (!facilities[f.facilityType]) {\n      facilities[f.facilityType] = [];\n      facilities[f.facilityType].push(f);\n    } else {\n      facilities[f.facilityType].push(f);\n    }\n  });\n  return {\n    data: facilities,\n    errors: errors\n  };\n};\n\nexport default facility;","map":{"version":3,"sources":["/home/ahmedt/ajisaq/jumm-mis/pages/facility.js"],"names":["React","Component","Link","API","graphqlOperation","queries","facility","props","console","log","data","map","items","pathname","query","o","length","getInitialProps","nextToken","results","errors","raw","facilities","graphql","listFacilitys","limit","value","push","error","f","facilityType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Link from \"next/link\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\n\nconst facility = props => (\n  <>\n    <div className=\"header\">\n      <form>\n        <div className=\"search-items\">\n          <Link href=\"/addFacility\">\n            <a>\n              <input name=\"new-facility\" type=\"button\" value=\"New Facility\" />\n            </a>\n          </Link>\n          <div>\n            Search for Facility: &nbsp;\n            <input name=\"search-term\" type=\"text\" placeholder=\"Facility ID\" />\n            &nbsp;\n            <input name=\"search\" type=\"button\" value=\"Search\" />\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <div className=\"main\">\n      {console.log(Object.entries(props.data))}\n      {Object.entries(props.data).map(items => (\n        <div className=\"card\" key={items[0]}>\n          <div className=\"card-title\">{items[0]}</div>\n          <div className=\"card-body\">\n            <div className=\"facility-summary\">\n              <Link href=\"#\">\n                <a>Unpaid (0) </a>\n              </Link>\n\n              <Link\n                as=\"/listFacility\"\n                href={{\n                  pathname: \"/listFacility\",\n\n                  query: { data: items.map(o => o) }\n                }}\n                prefetch\n              >\n                <a> Total ({items[1].length}) </a>\n              </Link>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  </>\n);\nfacility.getInitialProps = async function() {\n  let nextToken = null;\n  let results = [];\n  let errors;\n  let raw = {};\n  let facilities = {};\n  try {\n    do {\n      raw = await API.graphql(\n        graphqlOperation(queries.listFacilitys, {\n          limit: 10000,\n          nextToken: nextToken\n        })\n      );\n      nextToken = raw.data.listFacilitys.nextToken;\n      raw.data.listFacilitys.items.map(value => results.push(value));\n    } while (nextToken);\n  } catch (error) {\n    errors = error;\n  }\n  results.map(f => {\n    if (!facilities[f.facilityType]) {\n      facilities[f.facilityType] = [];\n      facilities[f.facilityType].push(f);\n    } else {\n      facilities[f.facilityType].push(f);\n    }\n  });\n\n  return { data: facilities, errors: errors };\n};\nexport default facility;\n"]},"metadata":{},"sourceType":"module"}