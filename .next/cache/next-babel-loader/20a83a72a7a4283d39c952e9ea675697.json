{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/ahmedt/ajisaq/jumm-mis/pages/listFacility.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\nimport Link from \"next/link\";\n\nvar listFacility = function listFacility(props) {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Unpaid Facility Charges for \", props.facilityType, \" This Month\"), __jsx(\"div\", {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.facilityType, \"s\"), __jsx(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"S/N\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Facility ID\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Owner Name\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Owner Contact\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Due Date\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.data.map(function (f, index) {\n    return __jsx(Link, {\n      href: {\n        pathname: \"/facilityDetail\",\n        query: {\n          id: f.id\n        }\n      },\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, index + 1)), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, f.facilityId), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, f.currentOwner), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, f.currentOwnerContact), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, f.createdAt)));\n  })))))));\n};\n\nlistFacility.getInitialProps = function _callee(_ref) {\n  var query, nextToken, results, errors, raw;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref.query;\n          nextToken = null;\n          results = [];\n          raw = {};\n          _context.prev = 4;\n\n        case 5:\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(queries.listFacilitys, {\n            filter: {\n              facilityType: {\n                eq: query.facilityType\n              }\n            },\n            limit: 10000,\n            nextToken: nextToken\n          })));\n\n        case 7:\n          raw = _context.sent;\n          nextToken = raw.data.listFacilitys.nextToken;\n          raw.data.listFacilitys.items.map(function (value) {\n            return results.push(value);\n          });\n\n        case 10:\n          if (nextToken) {\n            _context.next = 5;\n            break;\n          }\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](4);\n          errors = _context.t0;\n\n        case 16:\n          return _context.abrupt(\"return\", {\n            data: results,\n            facilityType: query.facilityType,\n            errors: errors\n          });\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[4, 13]]);\n};\n\nexport default listFacility;","map":{"version":3,"sources":["/home/ahmedt/ajisaq/jumm-mis/pages/listFacility.js"],"names":["React","Component","API","graphqlOperation","queries","Link","listFacility","props","facilityType","data","map","f","index","pathname","query","id","facilityId","currentOwner","currentOwnerContact","createdAt","getInitialProps","nextToken","results","raw","graphql","listFacilitys","filter","eq","limit","items","value","push","errors"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\nimport Link from \"next/link\";\nconst listFacility = props => (\n  <>\n    <div className=\"header\">\n      Unpaid Facility Charges for {props.facilityType} This Month\n    </div>\n    <div className=\"main\">\n      <div className=\"card-list\">\n        <div className=\"card-title\">{props.facilityType}s</div>\n        <div className=\"card-body\">\n          <table>\n            <thead>\n              <tr>\n                <th>S/N</th>\n                <th>Facility ID</th>\n                <th>Owner Name</th>\n                <th>Owner Contact</th>\n                <th>Due Date</th>\n              </tr>\n            </thead>\n            <tbody>\n              {props.data.map((f, index) => (\n                <Link\n                  href={{\n                    pathname: \"/facilityDetail\",\n                    query: { id: f.id }\n                  }}\n                  key={index}\n                >\n                  <tr>\n                    <td>\n                      <a>{index + 1}</a>\n                    </td>\n                    <td>{f.facilityId}</td>\n                    <td>{f.currentOwner}</td>\n                    <td>{f.currentOwnerContact}</td>\n                    <td>{f.createdAt}</td>\n                  </tr>\n                </Link>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </>\n);\nlistFacility.getInitialProps = async function({ query }) {\n  let nextToken = null;\n  let results = [];\n  let errors;\n  let raw = {};\n  try {\n    do {\n      raw = await API.graphql(\n        graphqlOperation(queries.listFacilitys, {\n          filter: { facilityType: { eq: query.facilityType } },\n          limit: 10000,\n          nextToken: nextToken\n        })\n      );\n      nextToken = raw.data.listFacilitys.nextToken;\n      raw.data.listFacilitys.items.map(value => results.push(value));\n    } while (nextToken);\n  } catch (error) {\n    errors = error;\n  }\n  return { data: results, facilityType: query.facilityType, errors: errors };\n};\nexport default listFacility;\n"]},"metadata":{},"sourceType":"module"}