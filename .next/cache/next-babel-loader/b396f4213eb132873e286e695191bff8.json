{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/ahmedt/ajisaq/jumm-mis/pages/listFacility.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\n\nvar listFacility = function listFacility(props) {\n  return __jsx(React.Fragment, null, console.log(props), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.facilityType), __jsx(\"div\", {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Gate 1\"), __jsx(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"S/N\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Item Name\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Fee\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Quantity\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Amount\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"1\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Keke Napep\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"20\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"100\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"2000\")), __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"1\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Cars\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"20\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"100\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"2000\")), __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"1\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Truck/Lorry\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"20\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"100\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"2000\")), __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"1\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Canter\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"20\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"100\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"2000\"))))))));\n};\n\nlistFacility.getInitialProps = function _callee(_ref) {\n  var query, nextToken, results, errors, raw;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref.query;\n          nextToken = null;\n          results = [];\n          raw = {};\n          _context.prev = 4;\n\n        case 5:\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(queries.listFacilitys, {\n            filter: {\n              facilityType: {\n                eq: query.facilityType\n              }\n            },\n            limit: 10000,\n            nextToken: nextToken\n          })));\n\n        case 7:\n          raw = _context.sent;\n          nextToken = raw.data.listFacilitys.nextToken;\n          raw.data.listFacilitys.items.map(function (value) {\n            return results.push(value);\n          });\n\n        case 10:\n          if (nextToken) {\n            _context.next = 5;\n            break;\n          }\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](4);\n          errors = _context.t0;\n\n        case 16:\n          return _context.abrupt(\"return\", {\n            data: results,\n            facilityType: query.facilityType,\n            errors: errors\n          });\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[4, 13]]);\n};\n\nexport default listFacility;","map":{"version":3,"sources":["/home/ahmedt/ajisaq/jumm-mis/pages/listFacility.js"],"names":["React","Component","API","graphqlOperation","queries","listFacility","props","console","log","facilityType","getInitialProps","query","nextToken","results","raw","graphql","listFacilitys","filter","eq","limit","data","items","map","value","push","errors"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\nconst listFacility = props => (\n  <>\n    {console.log(props)}\n    <p>{props.facilityType}</p>\n\n    <div className=\"main\">\n      <div className=\"card\">\n        <div className=\"card-title\">Gate 1</div>\n        <div className=\"card-body\">\n          <table>\n            <thead>\n              <tr>\n                <th>S/N</th>\n                <th>Item Name</th>\n                <th>Fee</th>\n                <th>Quantity</th>\n                <th>Amount</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>1</td>\n                <td>Keke Napep</td>\n                <td>20</td>\n                <td>100</td>\n                <td>2000</td>\n              </tr>\n              <tr>\n                <td>1</td>\n                <td>Cars</td>\n                <td>20</td>\n                <td>100</td>\n                <td>2000</td>\n              </tr>\n              <tr>\n                <td>1</td>\n                <td>Truck/Lorry</td>\n                <td>20</td>\n                <td>100</td>\n                <td>2000</td>\n              </tr>\n              <tr>\n                <td>1</td>\n                <td>Canter</td>\n                <td>20</td>\n                <td>100</td>\n                <td>2000</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </>\n);\nlistFacility.getInitialProps = async function({ query }) {\n  let nextToken = null;\n  let results = [];\n  let errors;\n  let raw = {};\n  try {\n    do {\n      raw = await API.graphql(\n        graphqlOperation(queries.listFacilitys, {\n          filter: { facilityType: { eq: query.facilityType } },\n          limit: 10000,\n          nextToken: nextToken\n        })\n      );\n      nextToken = raw.data.listFacilitys.nextToken;\n      raw.data.listFacilitys.items.map(value => results.push(value));\n    } while (nextToken);\n  } catch (error) {\n    errors = error;\n  }\n  return { data: results, facilityType: query.facilityType, errors: errors };\n};\nexport default listFacility;\n"]},"metadata":{},"sourceType":"module"}