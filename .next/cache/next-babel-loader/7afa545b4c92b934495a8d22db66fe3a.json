{"ast":null,"code":"var _jsxFileName = \"/home/ahmedt/ajisaq/jumm-mis/pages/listFacility.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\n\nconst listFacility = props => __jsx(React.Fragment, null, console.log(props), __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, props.facilityType));\n\nlistFacility.getInitialProps = async function ({\n  query\n}) {\n  let nextToken = null;\n  let results = [];\n  let errors;\n  let raw = {};\n\n  try {\n    do {\n      raw = await API.graphql(graphqlOperation(queries.listFacilitys, {\n        filter: {\n          facilityType: {\n            eq: query.facilityType\n          }\n        },\n        limit: 10000,\n        nextToken: nextToken\n      }));\n      nextToken = raw.data.listFacilitys.nextToken;\n      raw.data.listFacilitys.items.map(value => results.push(value));\n    } while (nextToken);\n  } catch (error) {\n    errors = error;\n  }\n\n  return {\n    data: results,\n    facilityType: query.facilityType,\n    errors: errors\n  };\n};\n\nexport default listFacility;","map":{"version":3,"sources":["/home/ahmedt/ajisaq/jumm-mis/pages/listFacility.js"],"names":["React","Component","API","graphqlOperation","queries","listFacility","props","console","log","facilityType","getInitialProps","query","nextToken","results","errors","raw","graphql","listFacilitys","filter","eq","limit","data","items","map","value","push","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;;AACA,MAAMC,YAAY,GAAGC,KAAK,IACxB,4BACGC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIA,KAAK,CAACG,YAAV,CAFF,CADF;;AAMAJ,YAAY,CAACK,eAAb,GAA+B,gBAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AACvD,MAAIC,SAAS,GAAG,IAAhB;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,MAAJ;AACA,MAAIC,GAAG,GAAG,EAAV;;AACA,MAAI;AACF,OAAG;AACDA,MAAAA,GAAG,GAAG,MAAMb,GAAG,CAACc,OAAJ,CACVb,gBAAgB,CAACC,OAAO,CAACa,aAAT,EAAwB;AACtCC,QAAAA,MAAM,EAAE;AAAET,UAAAA,YAAY,EAAE;AAAEU,YAAAA,EAAE,EAAER,KAAK,CAACF;AAAZ;AAAhB,SAD8B;AAEtCW,QAAAA,KAAK,EAAE,KAF+B;AAGtCR,QAAAA,SAAS,EAAEA;AAH2B,OAAxB,CADN,CAAZ;AAOAA,MAAAA,SAAS,GAAGG,GAAG,CAACM,IAAJ,CAASJ,aAAT,CAAuBL,SAAnC;AACAG,MAAAA,GAAG,CAACM,IAAJ,CAASJ,aAAT,CAAuBK,KAAvB,CAA6BC,GAA7B,CAAiCC,KAAK,IAAIX,OAAO,CAACY,IAAR,CAAaD,KAAb,CAA1C;AACD,KAVD,QAUSZ,SAVT;AAWD,GAZD,CAYE,OAAOc,KAAP,EAAc;AACdZ,IAAAA,MAAM,GAAGY,KAAT;AACD;;AACD,SAAO;AAAEL,IAAAA,IAAI,EAAER,OAAR;AAAiBJ,IAAAA,YAAY,EAAEE,KAAK,CAACF,YAArC;AAAmDK,IAAAA,MAAM,EAAEA;AAA3D,GAAP;AACD,CArBD;;AAsBA,eAAeT,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\nconst listFacility = props => (\n  <>\n    {console.log(props)}\n    <p>{props.facilityType}</p>\n  </>\n);\nlistFacility.getInitialProps = async function({ query }) {\n  let nextToken = null;\n  let results = [];\n  let errors;\n  let raw = {};\n  try {\n    do {\n      raw = await API.graphql(\n        graphqlOperation(queries.listFacilitys, {\n          filter: { facilityType: { eq: query.facilityType } },\n          limit: 10000,\n          nextToken: nextToken\n        })\n      );\n      nextToken = raw.data.listFacilitys.nextToken;\n      raw.data.listFacilitys.items.map(value => results.push(value));\n    } while (nextToken);\n  } catch (error) {\n    errors = error;\n  }\n  return { data: results, facilityType: query.facilityType, errors: errors };\n};\nexport default listFacility;\n"]},"metadata":{},"sourceType":"module"}