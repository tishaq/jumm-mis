{"ast":null,"code":"import _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nvar _jsxFileName = \"/home/ahmedt/ajisaq/jumm-mis/pages/gate.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\n\nclass gate extends Component {\n  //static async getInitialProps() {}\n  render() {\n    return __jsx(React.Fragment, null, console.log(this.props), __jsx(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"search-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Select the range of dates to view summary Maximum of 30 days\"), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"From:\", __jsx(\"input\", {\n      name: \"datepicker1\",\n      type: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), \"To:\", __jsx(\"input\", {\n      name: \"datepicker2\",\n      type: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), __jsx(\"input\", {\n      name: \"load\",\n      type: \"button\",\n      value: \"Load\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }))))), __jsx(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, _Object$entries(this.props.data).map(tck => __jsx(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, tck[0]), __jsx(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"S/N\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Item Name\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Fee\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Quantity\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Amount\"))), _Object$entries(tck[1]).map(cat => __jsx(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, cat[0]), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), _Object$entries(cat[1]).map((item, index) => __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, index + 1), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, item[0]), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, item[1][0]), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })))))))))));\n  }\n\n}\n\ngate.getInitialProps = async function () {\n  let nextToken = null;\n  let results = [];\n  let errors;\n  let raw = {};\n  let tickets = {};\n\n  try {\n    do {\n      raw = await API.graphql(graphqlOperation(queries.listTickets, {\n        limit: 10000,\n        nextToken: nextToken\n      }));\n      nextToken = raw.data.listTickets.nextToken;\n      raw.data.listTickets.items.map(value => results.push(value));\n    } while (nextToken);\n  } catch (error) {\n    errors = error;\n  }\n\n  results.map(t => {\n    if (!tickets[t.deviceName]) {\n      tickets[t.deviceName] = {};\n    }\n\n    if (!tickets[t.deviceName][t.receiptType]) {\n      tickets[t.deviceName][t.receiptType] = {};\n    }\n\n    if (!tickets[t.deviceName][t.receiptType][t.itemType]) {\n      tickets[t.deviceName][t.receiptType][t.itemType] = [];\n    }\n\n    tickets[t.deviceName][t.receiptType][t.itemType].push(t.fee);\n  });\n  return {\n    data: tickets,\n    errors: errors\n  };\n};\n\nexport default gate;","map":{"version":3,"sources":["/home/ahmedt/ajisaq/jumm-mis/pages/gate.js"],"names":["React","Component","API","graphqlOperation","queries","gate","render","console","log","props","data","map","tck","cat","item","index","getInitialProps","nextToken","results","errors","raw","tickets","graphql","listTickets","limit","items","value","push","error","t","deviceName","receiptType","itemType","fee"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\nclass gate extends Component {\n  //static async getInitialProps() {}\n  render() {\n    return (\n      <>\n        {console.log(this.props)}\n        <div className=\"header\">\n          <form>\n            <div className=\"search-items\">\n              <p>\n                Select the range of dates to view summary Maximum of 30 days\n              </p>\n\n              <div>\n                From:\n                <input name=\"datepicker1\" type=\"date\" />\n                To:\n                <input name=\"datepicker2\" type=\"date\" />\n                <input name=\"load\" type=\"button\" value=\"Load\" />\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"main\">\n          {Object.entries(this.props.data).map(tck => (\n            <div className=\"card\">\n              <div className=\"card-title\">{tck[0]}</div>\n              <div className=\"card-body\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>S/N</th>\n                      <th>Item Name</th>\n                      <th>Fee</th>\n                      <th>Quantity</th>\n                      <th>Amount</th>\n                    </tr>\n                  </thead>\n\n                  {Object.entries(tck[1]).map(cat => (\n                    <tbody>\n                      <tr>\n                        <td>{cat[0]}</td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                      </tr>\n                      {Object.entries(cat[1]).map((item, index) => (\n                        <tr>\n                          <td>{index + 1}</td>\n                          <td>{item[0]}</td>\n                          <td>{item[1][0]}</td>\n                          <td></td>\n                          <td></td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  ))}\n                </table>\n              </div>\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n}\ngate.getInitialProps = async function() {\n  let nextToken = null;\n  let results = [];\n  let errors;\n  let raw = {};\n  let tickets = {};\n  try {\n    do {\n      raw = await API.graphql(\n        graphqlOperation(queries.listTickets, {\n          limit: 10000,\n          nextToken: nextToken\n        })\n      );\n      nextToken = raw.data.listTickets.nextToken;\n      raw.data.listTickets.items.map(value => results.push(value));\n    } while (nextToken);\n  } catch (error) {\n    errors = error;\n  }\n  results.map(t => {\n    if (!tickets[t.deviceName]) {\n      tickets[t.deviceName] = {};\n    }\n    if (!tickets[t.deviceName][t.receiptType]) {\n      tickets[t.deviceName][t.receiptType] = {};\n    }\n    if (!tickets[t.deviceName][t.receiptType][t.itemType]) {\n      tickets[t.deviceName][t.receiptType][t.itemType] = [];\n    }\n    tickets[t.deviceName][t.receiptType][t.itemType].push(t.fee);\n  });\n  return { data: tickets, errors: errors };\n};\n\nexport default gate;\n"]},"metadata":{},"sourceType":"module"}