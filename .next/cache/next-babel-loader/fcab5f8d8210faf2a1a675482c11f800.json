{"ast":null,"code":"var _jsxFileName = \"/home/ahmedt/ajisaq/jumm-mis/pages/gate.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\n\nclass gate extends Component {\n  //static async getInitialProps() {}\n  render() {\n    return __jsx(React.Fragment, null, console.log(this.props), __jsx(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"search-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Select the range of dates to view summary Maximum of 30 days\"), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"From:\", __jsx(\"input\", {\n      name: \"datepicker1\",\n      type: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), \"To:\", __jsx(\"input\", {\n      name: \"datepicker2\",\n      type: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), __jsx(\"input\", {\n      name: \"load\",\n      type: \"button\",\n      value: \"Load\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }))))), __jsx(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Gate 1\"), __jsx(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"S/N\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Item Name\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Fee\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Quantity\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Amount\"))), __jsx(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"1\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Keke Napep\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"20\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"100\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"2000\")), __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"1\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Cars\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"20\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"100\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"2000\")), __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"1\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Truck/Lorry\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"20\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"100\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"2000\")), __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"1\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Canter\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"20\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"100\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"2000\"))))))));\n  }\n\n}\n\ngate.getInitialProps = async function () {\n  let nextToken = null;\n  let results = [];\n  let errors;\n  let raw = {};\n  let tickets = [];\n\n  try {\n    do {\n      raw = await API.graphql(graphqlOperation(queries.listTickets, {\n        limit: 10000,\n        nextToken: nextToken\n      }));\n      nextToken = raw.data.listTickets.nextToken;\n      raw.data.listTickets.items.map(value => results.push(value));\n    } while (nextToken);\n  } catch (error) {\n    errors = error;\n  }\n\n  results.map(t => {\n    if (!tickets[t.deviceName]) {\n      tickets[t.deviceName] = {};\n    }\n\n    if (!tickets[t.deviceName][t.receiptType]) {\n      tickets[t.deviceName][t.receiptType] = {};\n    }\n\n    if (!tickets[t.deviceName][t.receiptType][t.itemType]) {\n      tickets[t.deviceName][t.receiptType][t.itemType] = [];\n    }\n\n    tickets[t.deviceName][t.receiptType][t.itemType].push(t.fee);\n  }); // const item = element.itemType;\n  //       if(!d[device]){\n  //           d[device] = {};\n  //       }\n  //       if(!d[device][type]){\n  //           d[device][type] = {};\n  //       }\n  //       if(!d[device][type][item]){\n  //           d[device][type][item] = [];\n  //       }\n  //       d[device][type][item].push(parseInt(element.fee));\n\n  return {\n    data: tickets,\n    errors: errors\n  };\n};\n\nexport default gate;","map":{"version":3,"sources":["/home/ahmedt/ajisaq/jumm-mis/pages/gate.js"],"names":["React","Component","API","graphqlOperation","queries","gate","render","console","log","props","getInitialProps","nextToken","results","errors","raw","tickets","graphql","listTickets","limit","data","items","map","value","push","error","t","deviceName","receiptType","itemType","fee"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../src/graphql/queries\";\nclass gate extends Component {\n  //static async getInitialProps() {}\n  render() {\n    return (\n      <>\n        {console.log(this.props)}\n        <div className=\"header\">\n          <form>\n            <div className=\"search-items\">\n              <p>\n                Select the range of dates to view summary Maximum of 30 days\n              </p>\n\n              <div>\n                From:\n                <input name=\"datepicker1\" type=\"date\" />\n                To:\n                <input name=\"datepicker2\" type=\"date\" />\n                <input name=\"load\" type=\"button\" value=\"Load\" />\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"main\">\n          <div className=\"card\">\n            <div className=\"card-title\">Gate 1</div>\n            <div className=\"card-body\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>S/N</th>\n                    <th>Item Name</th>\n                    <th>Fee</th>\n                    <th>Quantity</th>\n                    <th>Amount</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>1</td>\n                    <td>Keke Napep</td>\n                    <td>20</td>\n                    <td>100</td>\n                    <td>2000</td>\n                  </tr>\n                  <tr>\n                    <td>1</td>\n                    <td>Cars</td>\n                    <td>20</td>\n                    <td>100</td>\n                    <td>2000</td>\n                  </tr>\n                  <tr>\n                    <td>1</td>\n                    <td>Truck/Lorry</td>\n                    <td>20</td>\n                    <td>100</td>\n                    <td>2000</td>\n                  </tr>\n                  <tr>\n                    <td>1</td>\n                    <td>Canter</td>\n                    <td>20</td>\n                    <td>100</td>\n                    <td>2000</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\ngate.getInitialProps = async function() {\n  let nextToken = null;\n  let results = [];\n  let errors;\n  let raw = {};\n  let tickets = [];\n  try {\n    do {\n      raw = await API.graphql(\n        graphqlOperation(queries.listTickets, {\n          limit: 10000,\n          nextToken: nextToken\n        })\n      );\n      nextToken = raw.data.listTickets.nextToken;\n      raw.data.listTickets.items.map(value => results.push(value));\n    } while (nextToken);\n  } catch (error) {\n    errors = error;\n  }\n  results.map(t => {\n    if (!tickets[t.deviceName]) {\n      tickets[t.deviceName] = {};\n    }\n    if (!tickets[t.deviceName][t.receiptType]) {\n      tickets[t.deviceName][t.receiptType] = {};\n    }\n    if (!tickets[t.deviceName][t.receiptType][t.itemType]) {\n      tickets[t.deviceName][t.receiptType][t.itemType] = [];\n    }\n    tickets[t.deviceName][t.receiptType][t.itemType].push(t.fee);\n  });\n  // const item = element.itemType;\n  //       if(!d[device]){\n  //           d[device] = {};\n  //       }\n  //       if(!d[device][type]){\n  //           d[device][type] = {};\n  //       }\n  //       if(!d[device][type][item]){\n  //           d[device][type][item] = [];\n  //       }\n  //       d[device][type][item].push(parseInt(element.fee));\n\n  return { data: tickets, errors: errors };\n};\n\nexport default gate;\n"]},"metadata":{},"sourceType":"module"}